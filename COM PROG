import java.util.Scanner;

class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        boolean playAgain;

        do {
            String userinput;
            int PlayerHp = 100, PlayerMp = 100;
            int EnemyHp = 100, EnemyMp = 100; 
            int turns = 0;
            String announce = "";
            boolean gamestatus = true;
            boolean validcommand = true;
            String PlayFaces =
                "  () ()                                         n,n\n" +
                " =[o-o]=                                       (-n-)=\n" +
                " ~(___)                                       c(  c)\n";

            while (gamestatus) {
                // Print GUI only once before taking an action
                String stats =
                    "\n" +
                    "=@=^=@=^=@=^=@=^=@=^=@=^=@=^=@=^=@=^=@=^=@=^=@=^=@=^=@=\n" +
                    "     |              Pooku Palace!               |\n" +
                    "=@=^=@=^=@=^=@=^=@=^=@=^=@=^=@=^=@=^=@=^=@=^=@=^=@=^=@=\n" +
                    announce + "\n" +
                    "Turns: " + turns + "\n" +
                    "\n" +
                    PlayFaces +
                    "======================================================\n" +
                    "Your Stats                             Enemy Stats\n" +
                    "-----------------------------------------------------\n" +
                    "Health: " + PlayerHp + "                            Health: " + EnemyHp + "\n" +
                    "Mp:\t" + PlayerMp + "                                Mp: " + EnemyMp + "\n" +
                    "-----------------------------------------------------\n" +
                    "[ATTACK]          [FOCUS]          [HEAL]          [RUN]\n" +
                    "Input your Desired move: ";
                System.out.println(stats);

                // Get user input
                userinput = sc.nextLine().toUpperCase().trim();

                switch (userinput) {
                    case "ATTACK":
                        int playerDamage = (int) (Math.random()*20) + 1;;
                        turns++;
                        announce = "You Attack the Enemy! And Deals "+playerDamage+" Damage";
                        EnemyHp -= playerDamage;
                        PlayFaces =
                            " () ()                                         n,n\n" +
                            "=[-.o]=  o=||==>                              (>n<)=\n" +
                            "~(___)                                       c(  c)\n";
                        break;

                    case "HEAL":
                        if (PlayerMp >= 15) { // Ensure enough MP
                            turns++;
                            announce = "You Heal yourself~~~ +20 HP, -15 MP";
                            PlayerHp += 20;
                            PlayerMp -= 15;
                            PlayFaces =
                                " () ()   +*                                    n,n\n" +
                                "=[^o^]=    +*                                 (-n-)=\n" +
                                "~(___)   +*                                  c(  c)\n";
                            PlayerHp = Math.min(PlayerHp, 100); // Cap HP at 100
                        } else {
                            announce = "You don't have enough mana to heal!";
                        }
                        break;

                    case "FOCUS":
                        turns++;
                        announce = "You're in a Focus State, it increases your mana. + 15 MP";
                        PlayerMp += 15;
                        PlayFaces =
                            " () ()   !!                               ??   n,n\n" +
                            "=[#o#]=                                       (-n-)=\n" +
                            "~(___)                                       c(  c)\n";
                        PlayerMp = Math.min(PlayerMp, 100); // Cap MP at 100
                        break;

                    case "RUN":
                        announce = "You ran away safely!";
                        PlayFaces =
                            " () ()   exit!!                       (weak)   n,n\n" +
                            "=[-o-]=   <==                                 (-u-)=\n" +
                            "~(___)    <==                                c(  c)\n";
                        gamestatus = false; // End game immediately
                        validcommand = false; //make the attacks to false
                        break;

                    default:
                        announce = "\nPooku was Confused.. (ENTER A VALID COMMAND!!)";
                        PlayFaces =
                            " () ()                                         n,n\n" +
                            "=[?.?]=                                       (?n?)=\n" +
                            "~(___)                                       c(  c)\n";
                        validcommand = false;
                        break;
                }
                if (validcommand) {
                    int enemyDamage;

                if (turns <= 5) { 
                    // Early game: Light attacks
                    enemyDamage = 10;
                    PlayerHp -= enemyDamage;
                    EnemyMp -= 5;
                    announce += "\nThe enemy attacks lightly and deals " + enemyDamage + " damage!";
                } else if (turns == 6) {
                    // Strategic buildup
                    EnemyMp += 20;
                    announce += "\nThe enemy prepares for something...";
                } else if (turns <= 10) {
                    // Mid-game: Moderate attacks
                    enemyDamage = 15;
                    PlayerHp -= enemyDamage;
                    EnemyMp -= 10;
                    announce += "\nThe enemy strikes harder and deals " + enemyDamage + " damage!";
                } else if (turns == 12) {
                    // Special action
                    EnemyMp -= 20;
                    announce += "\nThe enemy enters Berserk mode!";
                } else if (turns <= 15) {
                    // Berserk attacks
                    enemyDamage = 30;
                    PlayerHp -= enemyDamage;
                    announce += "\nThe enemy attacks furiously and deals " + enemyDamage + " damage!";
                } else if (turns == 18) {
                    // Pre-final event
                    EnemyMp -= 50;
                    announce = "THE ENEMY PULLED OUT A GUN!?";
                } else if (turns == 20) {
                    // Climax event
                    PlayerHp = 0; 
                    EnemyMp = 0;
                    announce += "\nTHE ENEMY SHOOTS POOKU IN THE HEAD! Critical hit and deals " + PlayerHp + " damage!";
                } else {
  
                    enemyDamage = 10; 
                    PlayerHp -= enemyDamage;
                    announce = "\nThe enemy fights cautiously.";
                }
            }
                // Check the game outcome conditions
                if (PlayerHp <= 0 && EnemyHp <= 0) {
                    announce = "It's a draw!";
                    PlayFaces =
                        " () ()                                         n,n\n" +
                        "=[X.X]=                                       (XnX)=\n" +
                        "~(___)                                       c(  c)\n";
                    gamestatus = false;
                } else if (PlayerHp <= 0) {
                    announce = "You have been defeated!";
                    PlayFaces =
                        " () ()                                         n,n\n" +
                        "=[X.X]=                                       (^n^)=\n" +
                        "~(___)                                       c(  c)\n";
                    gamestatus = false;
                } else if (EnemyHp <= 0) {
                    announce = "You are victorious!";
                    PlayFaces =
                        " () ()                                         n,n\n" +
                        "=[^.^]=                                       (XnX)=\n" +
                        "~(___)                                       c(  c)\n";
                    gamestatus = false;
                }
            }

            // After the game ends, print the final outcome
            System.out.println(
                "\n" +
                "=@=^=@=^=@=^=@=^=@=^=@=^=@=^=@=^=@=^=@=^=@=^=@=^=@=^=@=\n" +
                "     |              Pooku Palace!               |\n" +
                "=@=^=@=^=@=^=@=^=@=^=@=^=@=^=@=^=@=^=@=^=@=^=@=^=@=^=@=\n" +
                "\n" +
                "Turns: " + turns + "\n" +
                "          ~+={o|``" + announce + "``|o}=+~                  "+
		    "\n" +
                PlayFaces +
                "======================================================\n" +
                "Your Stats                             Enemy Stats\n" +
                "-----------------------------------------------------\n" +
                "Health: " + PlayerHp + "                            Health: " + EnemyHp + "\n" +
                "Mp:\t" + PlayerMp + "                                Mp: " + EnemyMp + "\n" +
                "-----------------------------------------------------\n" 
            );

            // Ask if the player wants to play again
            System.out.print("\nWould you like to play again? (yes/no): ");
            String response = sc.nextLine().trim().toLowerCase();
            playAgain = response.equals("yes");
        } while (playAgain);

        System.out.println("Thanks for playing! Goodbye!");
        sc.close();
    }
}


